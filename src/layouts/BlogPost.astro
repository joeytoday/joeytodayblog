---
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'

// Plugin styles
import 'katex/dist/katex.min.css'

import { Comment, MediumZoom } from 'astro-pure/advanced'
import { ArticleBottom, Copyright, PageInfo, TOC } from 'astro-pure/components/pages'
import { FormattedDate, Icon } from 'astro-pure/user'
import PageLayout from '@/layouts/ContentLayout.astro'
import { integ } from '@/site-config'

interface Props {
  post: CollectionEntry<'blog'>
  posts: CollectionEntry<'blog'>[]
  headings: MarkdownHeading[]
  remarkPluginFrontmatter: Record<string, unknown>
}

const {
  post: { id, data },
  posts,
  headings,
  remarkPluginFrontmatter
} = Astro.props

const {
  description,
  heroImage,
  publishDate,
  title,
  updatedDate,
  draft: isDraft,
  comment: enableComment
} = data

const socialImage = heroImage
  ? typeof heroImage.src === 'string'
    ? heroImage.src
    : heroImage.src.src
  : '/images/social-card.png'
const articleDate = updatedDate?.toISOString() ?? publishDate.toISOString()
const primaryColor = data.heroImage?.color ?? '#5E9B43'
---

<PageLayout
  meta={{ articleDate, description, ogImage: socialImage, title }}
  highlightColor={primaryColor}
  back='/blog'
>
  {!!headings.length && <TOC {headings} slot='sidebar' />}

  <div class='article-info max-lg:mx-auto' slot='header'>
    <h1 class='text-2xl font-medium sm:mb-2 sm:text-3xl'>
      {title}
    </h1>

    <div class='flex flex-wrap gap-x-4 gap-y-2 mt-2 text-xs leading-6 text-muted-foreground'>
      {data.draft ? <span class='text-red-500'>(Draft)</span> : null}
      {/* Article date */}
      <div class='flex items-center gap-1'>
        <Icon name='calendar' class='size-5' />
        <FormattedDate class='font-sans' date={publishDate} dateTimeOptions={{ month: 'short' }} />
        {updatedDate && (
          <div class='flex items-center gap-1'>
            <span> / </span>
            <span>
              Update
              <FormattedDate
                class='font-sans'
                date={updatedDate}
                dateTimeOptions={{ month: 'short' }}
              />
            </span>
          </div>
        )}
      </div>
      {/* Times read */}
      <div class='flex items-center gap-1'>
        <Icon name='time' class='size-5' />
        {remarkPluginFrontmatter.minutesRead}
      </div>
      {data.language && (
        <span class='flex items-center gap-1'>
          <Icon name='earth' class='size-5' />
          {data.language}
        </span>
      )}
      {!!data.tags?.length && (
        <span class='flex items-center gap-1'>
          <Icon name='hashtag' class='size-5' />
          {data.tags.map((tag: string, i: number) => (
            <div>
              <a
                aria-label={`View more blogs with the tag ${tag}`}
                class='hover:underline hover:underline-offset-4'
                data-pagefind-filter='tag'
                href={`/tags/${tag}`}
              >
                {tag}
              </a>
              {i < data.tags.length - 1 && '/'}
            </div>
          ))}
        </span>
      )}
    </div>

    <div class='mt-3'>
      <blockquote class='text-base text-muted-foreground'><q>{description}</q></blockquote>
      {!data.draft && data.comment && <PageInfo class='mt-1' />}
    </div>
  </div>

  {/* Dividing line */}
  <div class='mt-4 w-1/2 border-t max-lg:mx-auto sm:mt-6 sm:w-1/3' slot='header' />

  <slot />

  <Fragment slot='bottom'>
    {/* Copyright */}
    <Copyright {data} />
    {/* Article recommend */}
    <ArticleBottom collections={posts} {id} class='mt-3 sm:mt-6' />
    {/* Comment */}
    {!isDraft && enableComment && <Comment class='mt-3 sm:mt-6' />}
  </Fragment>

  <slot name='bottom-sidebar' slot='bottom-sidebar' />
</PageLayout>

{integ.mediumZoom.enable && <MediumZoom />}
