import { p as createVNode, F as Fragment, ay as __astro_tag_component__ } from './astro/server_CTfvycMK.mjs';
import { k as $$Aside } from './Svg_BVt06kNw.mjs';
import 'clsx';

const frontmatter = {
  "title": "Optimize Your Site",
  "description": "Improve your site performance and user experience",
  "order": 3,
  "minutesRead": "3 min read",
  "words": 410
};
function getHeadings() {
  return [{
    "depth": 2,
    "slug": "integrations",
    "text": "Integrations"
  }, {
    "depth": 2,
    "slug": "cdn",
    "text": "CDN"
  }, {
    "depth": 2,
    "slug": "coding",
    "text": "Coding"
  }, {
    "depth": 2,
    "slug": "pictures",
    "text": "Pictures"
  }, {
    "depth": 3,
    "slug": "use-optimized-component",
    "text": "Use optimized component"
  }, {
    "depth": 3,
    "slug": "change-image-size",
    "text": "Change Image Size"
  }, {
    "depth": 3,
    "slug": "adapt-external-images",
    "text": "Adapt External Images"
  }];
}
function _createMdxContent(props) {
  const {Fragment: Fragment$1} = props.components || ({});
  if (!Fragment$1) _missingMdxReference("Fragment");
  return createVNode(Fragment, {
    children: [createVNode(Fragment$1, {
      "set:html": "<h2 id=\"integrations\">Integrations<a class=\"anchor\" href=\"#integrations\">#</a></h2>\n<p>This theme has integrated with:</p>\n<ul>\n<li><code>sharp</code>: image optimization</li>\n<li><a href=\"/docs/integrations/others#playformcompress\"><code>@playform/compress</code></a>: HTML, CSS, JS, images minify</li>\n</ul>\n<h2 id=\"cdn\">CDN<a class=\"anchor\" href=\"#cdn\">#</a></h2>\n<p>Some light-weighted libraries are using js static links. You can configure CDN links to improve your site performance.</p>\n<div class=\"astro-code astro-code-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\"><div class=\"title text-sm text-foreground px-3 py-1 bg-primary-foreground rounded-lg border\">src/site.config.ts</div><pre><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">export</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> const</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\"> theme</span><span style=\"color:#D73A49;--shiki-dark:#F97583\">:</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> ThemeUserConfig</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> =</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">  // ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  npmCDN: </span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">'https://cdn.jsdelivr.net/npm'</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">  // Recommend:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">  // - https://cdn.jsdelivr.net/npm</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">  // - https://cdn.smartcis.cn/npm</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">  // - https://unkpg.com</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">  // - https://cdn.cbd.int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">}</span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">ts</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\"export const theme: ThemeUserConfig = {\n  // ...\n  npmCDN: &#x27;https://cdn.jsdelivr.net/npm&#x27;,\n  // Recommend:\n  // - https://cdn.jsdelivr.net/npm\n  // - https://cdn.smartcis.cn/npm\n  // - https://unkpg.com\n  // - https://cdn.cbd.int\n}\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n<h2 id=\"coding\">Coding<a class=\"anchor\" href=\"#coding\">#</a></h2>\n<p>It is a good way to use “Typescript-like” syntax comment in your <code>.astro</code> files. It can ensure your comment will not be rendered in the final production HTML file.</p>\n<div class=\"astro-code astro-code-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\"><pre><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">---</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// Here is a safe place to put your comment</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">import</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> { AstroComponent } </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> '@/components'</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">---</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">&#x3C;</span><span style=\"color:#22863A;--shiki-dark:#85E89D\">div</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">  &#x3C;!-- This is a bad comment style which will still in the production --></span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  {</span><span style=\"color:#6A737D;--shiki-dark:#6A737D\">/* This is a better comment style */</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  &#x3C;</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">AstroComponent</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">>Hello, Astro!&#x3C;/</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">AstroComponent</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">></span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">&#x3C;/</span><span style=\"color:#22863A;--shiki-dark:#85E89D\">div</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">></span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">astro</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\"---\n// Here is a safe place to put your comment\nimport { AstroComponent } from &#x27;@/components&#x27;\n---\n\n<div>\n  <!-- This is a bad comment style which will still in the production -->\n  {/* This is a better comment style */}\n  <AstroComponent>Hello, Astro!</AstroComponent>\n</div>\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n<h2 id=\"pictures\">Pictures<a class=\"anchor\" href=\"#pictures\">#</a></h2>\n<h3 id=\"use-optimized-component\">Use optimized component<a class=\"anchor\" href=\"#use-optimized-component\">#</a></h3>\n<p>Display optimized images with the <code>&#x3C;Image /></code> component: <a href=\"https://docs.astro.build/en/guides/images/#display-optimized-images-with-the-image--component\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Use the built-in <code>&#x3C;Image /></code> Astro component<span> ↗</span></a> to display optimized versions of:</p>\n<ul>\n<li>your local images located within the src/ folder</li>\n<li>configured remote images from authorized sources</li>\n</ul>\n<p><code>&#x3C;Image /></code> can transform a local or authorized remote image’s dimensions, file type, and quality for control over your displayed image. The resulting <code>&#x3C;img></code> tag includes alt, loading, and decoding attributes and infers image dimensions to avoid Cumulative Layout Shift (CLS).</p>\n"
    }), createVNode($$Aside, {
      title: "What is Cumulative Layout Shift?",
      "set:html": "<p>Cumulative Layout Shift (CLS) is a Core Web Vital metric for measuring how much content shifted on your page during loading. The <code>&#x3C;Image /></code> component optimizes for CLS by automatically setting the correct width and height for your images.</p>"
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>You can use <code>loading=\"lazy\"</code> to enable lazy loading for images.</p>\n<div class=\"astro-code astro-code-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\"><div class=\"title text-sm text-foreground px-3 py-1 bg-primary-foreground rounded-lg border\">src/pages/somepage.astro</div><pre><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">---</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// import the Image component and the image</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">import</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> { Image } </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> 'astro:assets'</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">import</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> myImage </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> '../assets/my_image.png'</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">; </span><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// Image is 1600x900</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">---</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">&#x3C;!-- `alt` is mandatory on the Image component --></span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">&#x3C;</span><span style=\"color:#005CC5;--shiki-dark:#79B8FF\">Image</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> src</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">={myImage} </span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">alt</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"A description of my image.\"</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> /></span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">astro</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\"---\n// import the Image component and the image\nimport { Image } from &#x27;astro:assets&#x27;;\nimport myImage from &#x27;../assets/my_image.png&#x27;; // Image is 1600x900\n---\n\n<!-- &#x60;alt&#x60; is mandatory on the Image component -->\n<Image src={myImage} alt=&#x22;A description of my image.&#x22; />\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n<div class=\"astro-code astro-code-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\"><pre><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">&#x3C;!-- Output --></span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">&#x3C;</span><span style=\"color:#22863A;--shiki-dark:#85E89D\">img</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">  src</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"/_astro/my_image.hash.webp\"</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">  width</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"1600\"</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">  height</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"900\"</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">  decoding</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"async\"</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">  loading</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"lazy\"</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">  class</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"my-class\"</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">  alt</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">=</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">\"\"</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">/></span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">html</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\"<!-- Output -->\n<img\n  src=&#x22;/_astro/my_image.hash.webp&#x22;\n  width=&#x22;1600&#x22;\n  height=&#x22;900&#x22;\n  decoding=&#x22;async&#x22;\n  loading=&#x22;lazy&#x22;\n  class=&#x22;my-class&#x22;\n  alt=&#x22;&#x22;\n/>\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n<p>Using this, it will transform your images to a WebP format. <code>.md</code> and <code>.mdx</code> files are enabled default.</p>\n<h3 id=\"change-image-size\">Change Image Size<a class=\"anchor\" href=\"#change-image-size\">#</a></h3>\n<p>Althought this theme has integrated with some known image optimization plugins, you way still need to optimize your images for some key pages like homepage.</p>\n<p>A easy way is using online tools like <a href=\"https://tinypng.com/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">TinyPNG<span> ↗</span></a> to manually compress your images.</p>\n<h3 id=\"adapt-external-images\">Adapt External Images<a class=\"anchor\" href=\"#adapt-external-images\">#</a></h3>\n<p>If you are using external images, excepting the lazy-load tag, you can also add <a href=\"https://docs.astro.build/en/guides/images/#authorizing-remote-images\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Astro pre-optimize service<span> ↗</span></a> for it. This will change external images to local optimized ones.</p>\n<div class=\"astro-code astro-code-themes github-light github-dark has-diff\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\"><div class=\"title text-sm text-foreground px-3 py-1 bg-primary-foreground rounded-lg border\">astro.config.mjs</div><pre><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">export</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> default</span><span style=\"color:#6F42C1;--shiki-dark:#B392F0\"> defineConfig</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">({</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">  // ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  image: {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">    // ...</span></span>\n<span class=\"line diff add\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">    domains: [</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\">'&#x3C;specific site domain>'</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">] </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\">})</span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">js</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\"export default defineConfig({\n  // ...\n  image: {\n    // ...\n    domains: [&#x27;<specific site domain>&#x27;] // [!code ++]\n  }\n})\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n"
    }), createVNode($$Aside, {
      type: "caution",
      "set:html": "This may have a bad work for svg files."
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? createVNode(MDXLayout, {
    ...props,
    children: createVNode(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
function _missingMdxReference(id, component) {
  throw new Error("Expected " + ("component" ) + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}

const url = "src/content/docs/advanced/optimize.mdx";
const file = "/Users/kaiyijing/GitHub/joeytodayblog/src/content/docs/advanced/optimize.mdx";
const Content = (props = {}) => MDXContent({
  ...props,
  components: { Fragment: Fragment, ...props.components, },
});
Content[Symbol.for('mdx-component')] = true;
Content[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter.layout);
Content.moduleId = "/Users/kaiyijing/GitHub/joeytodayblog/src/content/docs/advanced/optimize.mdx";
__astro_tag_component__(Content, 'astro:jsx');

export { Content, Content as default, file, frontmatter, getHeadings, url };
