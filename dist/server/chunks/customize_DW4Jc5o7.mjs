import { p as createVNode, F as Fragment, ay as __astro_tag_component__ } from './astro/server_Dg3zV7A2.mjs';
import { o as $$Steps, j as $$Aside, a as $$Spoiler } from './Svg_D_ielPpo.mjs';
import 'clsx';

const frontmatter = {
  "title": "Customize Theme",
  "description": "Custom theme by yourself",
  "order": 2,
  "minutesRead": "3 min read",
  "words": 456
};
function getHeadings() {
  return [{
    "depth": 2,
    "slug": "you-should-know",
    "text": "You Should Know"
  }, {
    "depth": 2,
    "slug": "swizzling",
    "text": "Swizzling"
  }, {
    "depth": 2,
    "slug": "package-mode",
    "text": "Package mode"
  }];
}
function _createMdxContent(props) {
  const _components = {
    p: "p",
    ...props.components
  }, {Fragment: Fragment$1} = _components;
  if (!Fragment$1) _missingMdxReference("Fragment");
  return createVNode(Fragment, {
    children: [createVNode(Fragment$1, {
      "set:html": "<h2 id=\"you-should-know\">You Should Know</h2>\n<p>This theme is designed to “NPM Package” for the following reasons:</p>\n<ol>\n<li>The code written in package may be frequently changed. If users change them at will, it will significantly increase the cost of subsequent updates and merging (various conflicts for code)</li>\n<li>Roll back and switch between different versions easily, to maintain user stability</li>\n<li>Reduce system coupling &#x26; increase reuse ability</li>\n<li>The NPM Package mode can be used as a “Astro plugin” to append additional operations that enhance user experience during the build phase</li>\n<li>Support some built-in commands like new, check, info, etc.</li>\n<li>Use as component library for other Astro projects (yes, this project can be broken down into the UI component library): <a href=\"https://www.npmjs.com/package/astro-pure\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Package details<span> ↗</span></a>.</li>\n</ol>\n<p>Before you customize it, you should check <a href=\"/docs/setup/configuration#theme-configuration\"><code>site.config.ts</code></a> to make sure there is no option that satisfy your need.</p>\n<h2 id=\"swizzling\">Swizzling</h2>\n<p>This theme chose an elegant method called ‘Swizzling’, which is inspired by the design from <a href=\"https://docusaurus.io/docs/swizzling\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Docusaurus<span> ↗</span></a>.</p>\n<ol>\n<li>Use an IDE to quickly view the source code corresponding to a certain component (In VSCode, it is to click the component with <kbd>Ctrl</kbd>).</li>\n<li>Copy to <code>src/components/&#x3C;your prefer directory></code>.</li>\n<li>After modification, change the corresponding reference to your own file path.</li>\n</ol>\n<p>Let’s make an example to customize the <code>Footer</code> component:</p>\n"
    }), createVNode($$Steps, {
      "set:html": "<ol>\n<li>\n<p>Search the <code>Footer</code> in your project code:</p>\n<div class=\"astro-code astro-code-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\"><div class=\"title text-sm text-foreground px-3 py-1 bg-primary-foreground rounded-lg border\">src/layout/BaseLayout.astro</div><pre><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">---</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">import</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> { Footer, Header, ThemeProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> 'astro-pure/components/basic'</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">import</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> type</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> { SiteMeta } </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> 'astro-pure/types'</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// ...</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">---</span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">astro</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\"---\nimport { Footer, Header, ThemeProvider } from &#x27;astro-pure/components/basic&#x27;\nimport type { SiteMeta } from &#x27;astro-pure/types&#x27;\n// ...\n---\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n</li>\n<li>\n<p>Find it in theme source code:</p>\n<div class=\"astro-code astro-code-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\"><div class=\"title text-sm text-foreground px-3 py-1 bg-primary-foreground rounded-lg border\">node_modules/astro-theme-pure/components/basic/index.ts</div><pre><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">export</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> { </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">default</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> as</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> Footer } </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> './Footer.astro'</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">export</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> { </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">default</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> as</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> Header } </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> './Header.astro'</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">export</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> { </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">default</span><span style=\"color:#D73A49;--shiki-dark:#F97583\"> as</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> ThemeProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> './ThemeProvider.astro'</span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">ts</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\"export { default as Footer } from &#x27;./Footer.astro&#x27;\nexport { default as Header } from &#x27;./Header.astro&#x27;\nexport { default as ThemeProvider } from &#x27;./ThemeProvider.astro&#x27;\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n<p>Then you get the <code>Footer</code> component source code at <code>node_modules/astro-theme-pure/components/basic/Footer.astro</code>.</p>\n</li>\n<li>\n<p>Copy the <code>Footer.astro</code> file to your project:</p>\n<div class=\"astro-code astro-code-themes github-light github-dark\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\"><pre><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#B392F0\">cp</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> node_modules/astro-theme-pure/components/basic/Footer.astro</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> src/components/custom/Footer.astro</span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">bash</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\"cp node_modules/astro-theme-pure/components/basic/Footer.astro src/components/custom/Footer.astro\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n</li>\n<li>\n<p>Solve the sub-dependencies problem:</p>\n<div class=\"astro-code astro-code-themes github-light github-dark has-diff\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\"><div class=\"title text-sm text-foreground px-3 py-1 bg-primary-foreground rounded-lg border\">src/components/custom/Footer.astro</div><pre><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">---</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">import</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> config </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> 'virtual:config'</span></span>\n<span class=\"line\"></span>\n<span class=\"line diff remove\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">import</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> { Icon } </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> '../user'</span></span>\n<span class=\"line diff add\"><span style=\"color:#D73A49;--shiki-dark:#F97583\">import</span><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> { Icon } </span><span style=\"color:#D73A49;--shiki-dark:#F97583\">from</span><span style=\"color:#032F62;--shiki-dark:#9ECBFF\"> 'astro-pure/user'</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">// ...</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#6A737D\">---</span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">astro</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\"---\nimport config from &#x27;virtual:config&#x27;\n\nimport { Icon } from &#x27;../user&#x27; // [!code --]\nimport { Icon } from &#x27;astro-pure/user&#x27; // [!code ++]\n// ...\n---\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n</li>\n<li>\n<p>Change the reference in <code>BaseLayout.astro</code>:</p>\n<div class=\"astro-code astro-code-themes github-light github-dark has-diff\" style=\"background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\"><div class=\"title text-sm text-foreground px-3 py-1 bg-primary-foreground rounded-lg border\">src/layout/BaseLayout.astro</div><pre><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> ---</span></span>\n<span class=\"line diff remove\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> import { Footer, Header, ThemeProvider } from 'astro-pure/components/basic'</span></span>\n<span class=\"line diff add\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> import { Header, ThemeProvider } from 'astro-pure/components/basic'</span></span>\n<span class=\"line diff add\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> import { Footer } from '@/components/custom/Footer.astro'</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> // ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#E1E4E8\"> ---</span></span></code></pre><span class=\"language ps-1 pe-3 text-sm bg-muted text-muted-foreground\">astro</span><button class=\"copy text-muted-foreground p-1 box-content border rounded bg-primary-foreground\" data-code=\" ---\n import { Footer, Header, ThemeProvider } from &#x27;astro-pure/components/basic&#x27; // [!code --]\n import { Header, ThemeProvider } from &#x27;astro-pure/components/basic&#x27; // [!code ++]\n import { Footer } from &#x27;@/components/custom/Footer.astro&#x27; // [!code ++]\n // ...\n ---\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \"><div class=\"ready\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-clipboard-line\"></use></svg></div><div class=\"success hidden\"><svg class=\"size-5\"><use href=\"/icons/code.svg#mingcute-file-check-line\"></use></svg></div></button></div>\n</li>\n</ol>"
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>Then you’ve done a “localization” of the component.</p>\n<h2 id=\"package-mode\">Package mode</h2>\n"
    }), createVNode($$Aside, {
      type: "danger",
      title: ('Use at Your Own Risk').toUpperCase(),
      children: createVNode(_components.p, {
        children: ["Keep cautious for change the underlying code ", createVNode($$Spoiler, {
          "set:html": "<del>底层代码不可突破，祖宗之法不可变</del>"
        }), ", unless you know what you are doing. You should know and accept any risks & difficulties for making project complex."]
      })
    }), "\n", createVNode(Fragment$1, {
      "set:html": "<p>If you want to make some breaking changes or just make a test, this method may follow “what you see is what you get”.</p>\n<ol>\n<li>Making sure you have the original theme code (<code>./packages/pure</code>). If yo’ve deleted it, download it from the <a href=\"https://github.com/cworld1/astro-theme-pure/releases\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Releases<span> ↗</span></a>.</li>\n<li>Link it to your project using your package manager.</li>\n<li>Then change the theme code as it is a part of your code!</li>\n</ol>\n"
    }), createVNode($$Aside, {
      type: "tip",
      "set:html": "<p>For bun user, please refer to: <a href=\"https://astro-pure.js.org/docs/setup/deployment#package-mode\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://astro-pure.js.org/docs/setup/deployment#package-mode<span> ↗</span></a></p><p>This can help you correctly build your project on cloud CI/CD.</p>"
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? createVNode(MDXLayout, {
    ...props,
    children: createVNode(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
function _missingMdxReference(id, component) {
  throw new Error("Expected " + ("component" ) + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}

const url = "src/content/docs/advanced/customize.mdx";
const file = "/Users/kaiyijing/GitHub/joeytodayblog/src/content/docs/advanced/customize.mdx";
const Content = (props = {}) => MDXContent({
  ...props,
  components: { Fragment: Fragment, ...props.components, },
});
Content[Symbol.for('mdx-component')] = true;
Content[Symbol.for('astro.needsHeadRendering')] = !Boolean(frontmatter.layout);
Content.moduleId = "/Users/kaiyijing/GitHub/joeytodayblog/src/content/docs/advanced/customize.mdx";
__astro_tag_component__(Content, 'astro:jsx');

export { Content, Content as default, file, frontmatter, getHeadings, url };
